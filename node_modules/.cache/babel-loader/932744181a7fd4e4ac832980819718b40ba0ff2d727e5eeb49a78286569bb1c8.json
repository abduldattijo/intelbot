{"ast":null,"code":"var _jsxFileName = \"/Users/abduldattijo/Downloads/intelaanalysis/src/components/GeospatialMap.tsx\",\n  _s = $RefreshSig$();\n// src/components/GeospatialMap.tsx - Interactive Geospatial Intelligence Map\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { MapPin, Filter, Download, Search, AlertTriangle } from 'lucide-react';\n\n// Set Mapbox access token\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiYWJkdWxkYXR0aWpvMSIsImEiOiJjbWM2bW83Y3IwbmN4MmtzYWw0cHppbXF4In0.0pSWoI2VOyPyORqCROJc9g';\nconst GeospatialMap = ({\n  analysisData\n}) => {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedPoint, setSelectedPoint] = useState(null);\n  const [points, setPoints] = useState([]);\n  const [filters, setFilters] = useState({\n    threat_levels: ['low', 'medium', 'high'],\n    point_types: ['incident', 'surveillance', 'intelligence', 'facility', 'location'],\n    date_range: {\n      start: '',\n      end: ''\n    }\n  });\n  const [showFilters, setShowFilters] = useState(false);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  useEffect(() => {\n    if (!mapContainer.current) return;\n\n    // Initialize map\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/satellite-v9',\n      center: [7.4, 9.0],\n      // Nigeria center\n      zoom: 6,\n      pitch: 0,\n      bearing: 0\n    });\n    map.current.on('load', () => {\n      setIsLoaded(true);\n      setupMapLayers();\n    });\n\n    // Add navigation controls\n    map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    // Add fullscreen control\n    map.current.addControl(new mapboxgl.FullscreenControl(), 'top-right');\n    return () => {\n      if (map.current) {\n        map.current.remove();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Load data from analysis when it changes\n    console.log('Analysis data changed:', analysisData);\n    if (analysisData) {\n      loadAnalysisData();\n    } else {\n      console.log('No analysis data, loading mock data');\n      loadMockData();\n    }\n  }, [analysisData]);\n  const loadAnalysisData = () => {\n    if (!analysisData) return;\n    console.log('=== DEBUGGING GEOSPATIAL DATA ===');\n    console.log('Analysis Data:', analysisData);\n    console.log('Geographic Intelligence:', analysisData.analysis.geographic_intelligence);\n    const analysisPoints = [];\n    const geoIntel = analysisData.analysis.geographic_intelligence;\n    const threatLevel = analysisData.analysis.sentiment_analysis.threat_level.toLowerCase();\n    console.log('Coordinates from analysis:', geoIntel.coordinates);\n    console.log('States from analysis:', geoIntel.states);\n    console.log('Other locations from analysis:', geoIntel.other_locations);\n\n    // Add coordinates from analysis\n    geoIntel.coordinates.forEach((coord, index) => {\n      console.log(`Processing coordinate ${index}:`, coord);\n      analysisPoints.push({\n        id: `coord_${index}`,\n        latitude: coord.latitude,\n        longitude: coord.longitude,\n        title: coord.location_name || 'Identified Location',\n        description: `Location extracted from document analysis with ${(coord.confidence * 100).toFixed(1)}% confidence`,\n        threat_level: threatLevel,\n        type: 'location',\n        timestamp: analysisData.metadata.uploaded_at,\n        metadata: {\n          confidence: coord.confidence,\n          source: 'document_analysis',\n          filename: analysisData.metadata.filename\n        }\n      });\n    });\n\n    // Create points for major Nigerian cities mentioned in states\n    const nigerianCities = {\n      // State capitals and major cities\n      'lagos': {\n        lat: 6.5244,\n        lng: 3.3792\n      },\n      'abuja': {\n        lat: 9.0765,\n        lng: 7.3986\n      },\n      'kano': {\n        lat: 12.0022,\n        lng: 8.5920\n      },\n      'ibadan': {\n        lat: 7.3775,\n        lng: 3.9470\n      },\n      'port harcourt': {\n        lat: 4.8156,\n        lng: 7.0498\n      },\n      'kaduna': {\n        lat: 10.5105,\n        lng: 7.4165\n      },\n      'benin city': {\n        lat: 6.3350,\n        lng: 5.6037\n      },\n      'maiduguri': {\n        lat: 11.8311,\n        lng: 13.1510\n      },\n      'jos': {\n        lat: 9.8965,\n        lng: 8.8583\n      },\n      'ilorin': {\n        lat: 8.5000,\n        lng: 4.5500\n      },\n      'abeokuta': {\n        lat: 7.1475,\n        lng: 3.3619\n      },\n      'akure': {\n        lat: 7.2571,\n        lng: 5.2058\n      },\n      'awka': {\n        lat: 6.2120,\n        lng: 7.0740\n      },\n      'bauchi': {\n        lat: 10.3158,\n        lng: 9.8442\n      },\n      'calabar': {\n        lat: 4.9516,\n        lng: 8.3220\n      },\n      'enugu': {\n        lat: 6.5244,\n        lng: 7.5112\n      },\n      'gombe': {\n        lat: 10.2840,\n        lng: 11.1610\n      },\n      'katsina': {\n        lat: 12.9908,\n        lng: 7.6018\n      },\n      'lafia': {\n        lat: 8.4833,\n        lng: 8.5167\n      },\n      'lokoja': {\n        lat: 7.7974,\n        lng: 6.7337\n      },\n      'makurdi': {\n        lat: 7.7340,\n        lng: 8.5120\n      },\n      'minna': {\n        lat: 9.6134,\n        lng: 6.5560\n      },\n      'oshogbo': {\n        lat: 7.7719,\n        lng: 4.5567\n      },\n      'owerri': {\n        lat: 5.4840,\n        lng: 7.0351\n      },\n      'sokoto': {\n        lat: 13.0609,\n        lng: 5.2476\n      },\n      'umuahia': {\n        lat: 5.5265,\n        lng: 7.4906\n      },\n      'uyo': {\n        lat: 5.0515,\n        lng: 7.9307\n      },\n      'yenagoa': {\n        lat: 4.9267,\n        lng: 6.2676\n      },\n      'yola': {\n        lat: 9.2000,\n        lng: 12.4833\n      },\n      // Major commercial cities and LGAs\n      'warri': {\n        lat: 5.5167,\n        lng: 5.7500\n      },\n      'aba': {\n        lat: 5.1068,\n        lng: 7.3668\n      },\n      'onitsha': {\n        lat: 6.1667,\n        lng: 6.7833\n      },\n      'zaria': {\n        lat: 11.0804,\n        lng: 7.7170\n      },\n      'surulere': {\n        lat: 6.5027,\n        lng: 3.3584\n      },\n      'ikeja': {\n        lat: 6.5962,\n        lng: 3.3431\n      },\n      'agege': {\n        lat: 6.6186,\n        lng: 3.3403\n      },\n      'alimosho': {\n        lat: 6.5833,\n        lng: 3.2667\n      },\n      'ikorodu': {\n        lat: 6.6019,\n        lng: 3.5106\n      },\n      'victoria island': {\n        lat: 6.4281,\n        lng: 3.4219\n      },\n      'apapa': {\n        lat: 6.4474,\n        lng: 3.3903\n      },\n      'bonny': {\n        lat: 4.4500,\n        lng: 7.1667\n      },\n      'yaba': {\n        lat: 6.5095,\n        lng: 3.3711\n      },\n      'mushin': {\n        lat: 6.5240,\n        lng: 3.3548\n      }\n    };\n\n    // Add points for mentioned states and cities with improved matching\n    const allLocations = [...geoIntel.states, ...geoIntel.cities, ...geoIntel.other_locations];\n    console.log('All locations to process:', allLocations);\n    allLocations.forEach((location, index) => {\n      const locationKey = location.toLowerCase().trim();\n\n      // Direct match first\n      let cityData = nigerianCities[locationKey];\n\n      // If no direct match, try partial matching\n      if (!cityData) {\n        // Try removing common suffixes\n        const cleanedLocation = locationKey.replace(/\\s+state$/i, '').replace(/\\s+lga$/i, '').replace(/\\s+local government$/i, '').replace(/\\s+area$/i, '').replace(/\\s+city$/i, '').trim();\n        cityData = nigerianCities[cleanedLocation];\n\n        // If still no match, try finding partial matches in our database\n        if (!cityData) {\n          const partialMatch = Object.keys(nigerianCities).find(key => key.includes(cleanedLocation) || cleanedLocation.includes(key));\n          if (partialMatch) {\n            cityData = nigerianCities[partialMatch];\n          }\n        }\n      }\n      console.log(`Checking location \"${location}\" (key: \"${locationKey}\"):`, cityData);\n      if (cityData) {\n        analysisPoints.push({\n          id: `location_${index}`,\n          latitude: cityData.lat,\n          longitude: cityData.lng,\n          title: `${location} (Mentioned)`,\n          description: `Location \"${location}\" mentioned in document: ${analysisData.metadata.filename}`,\n          threat_level: threatLevel,\n          type: 'intelligence',\n          timestamp: analysisData.metadata.uploaded_at,\n          metadata: {\n            source: 'location_mention',\n            original_text: location,\n            filename: analysisData.metadata.filename\n          }\n        });\n      } else {\n        console.log(`No coordinates found for location: ${location}`);\n      }\n    });\n\n    // If no specific coordinates but locations mentioned, focus on Nigeria\n    if (analysisPoints.length === 0 && allLocations.length > 0) {\n      console.log('No specific points found, adding general Nigeria reference');\n      // Add a general Nigeria point\n      analysisPoints.push({\n        id: 'nigeria_general',\n        latitude: 9.0820,\n        longitude: 8.6753,\n        title: 'Nigeria (General Reference)',\n        description: `Document mentions Nigerian locations but no specific coordinates found. Locations: ${allLocations.slice(0, 3).join(', ')}${allLocations.length > 3 ? '...' : ''}`,\n        threat_level: threatLevel,\n        type: 'intelligence',\n        timestamp: analysisData.metadata.uploaded_at,\n        metadata: {\n          source: 'general_reference',\n          mentioned_locations: allLocations,\n          filename: analysisData.metadata.filename\n        }\n      });\n    }\n    console.log('Final analysis points:', analysisPoints);\n    setPoints(analysisPoints);\n\n    // Adjust map view to show all points\n    if (analysisPoints.length > 0 && map.current) {\n      console.log('Adjusting map bounds for', analysisPoints.length, 'points');\n      const bounds = new mapboxgl.LngLatBounds();\n      analysisPoints.forEach(point => {\n        bounds.extend([point.longitude, point.latitude]);\n      });\n      setTimeout(() => {\n        if (map.current) {\n          console.log('Fitting map to bounds:', bounds);\n          map.current.fitBounds(bounds, {\n            padding: 50,\n            maxZoom: 12\n          });\n        }\n      }, 1000);\n    } else {\n      console.log('No points to display on map');\n    }\n  };\n  const loadMockData = () => {\n    // Fallback mock data when no analysis data is available\n    const mockPoints = [{\n      id: '1',\n      latitude: 6.5244,\n      longitude: 3.3792,\n      title: 'Lagos Security Incident',\n      description: 'Suspicious activity reported in Victoria Island area',\n      threat_level: 'high',\n      type: 'incident',\n      timestamp: '2025-06-20T10:30:00Z',\n      metadata: {\n        severity: 8,\n        casualties: 0\n      }\n    }, {\n      id: '2',\n      latitude: 9.0765,\n      longitude: 7.3986,\n      title: 'Abuja Intelligence Facility',\n      description: 'Central intelligence coordination center',\n      threat_level: 'low',\n      type: 'facility',\n      timestamp: '2025-06-20T08:00:00Z',\n      metadata: {\n        classification: 'confidential'\n      }\n    }, {\n      id: '3',\n      latitude: 7.3775,\n      longitude: 3.9470,\n      title: 'Ibadan Surveillance Point',\n      description: 'Active monitoring station for regional intelligence',\n      threat_level: 'medium',\n      type: 'surveillance',\n      timestamp: '2025-06-20T14:15:00Z',\n      metadata: {\n        coverage_radius: 25\n      }\n    }];\n    setPoints(mockPoints);\n  };\n  const setupMapLayers = () => {\n    if (!map.current || !isLoaded) return;\n    console.log('Setting up initial map layers');\n\n    // Don't setup layers here, let the useEffect handle it when points are available\n    // This prevents the timing issue where layers are created before data is ready\n  };\n  useEffect(() => {\n    if (!map.current || !isLoaded || points.length === 0) return;\n    console.log('=== UPDATING MAP WITH POINTS ===');\n    console.log('Points to display:', points);\n    console.log('Map loaded:', isLoaded);\n    const filteredPoints = points.filter(point => {\n      const matchesThreatLevel = filters.threat_levels.includes(point.threat_level);\n      const matchesType = filters.point_types.includes(point.type);\n      let matchesDateRange = true;\n      if (filters.date_range.start && filters.date_range.end) {\n        const pointDate = new Date(point.timestamp);\n        const startDate = new Date(filters.date_range.start);\n        const endDate = new Date(filters.date_range.end);\n        matchesDateRange = pointDate >= startDate && pointDate <= endDate;\n      }\n      return matchesThreatLevel && matchesType && matchesDateRange;\n    });\n    console.log('Filtered points:', filteredPoints);\n    const geojsonData = {\n      type: 'FeatureCollection',\n      features: filteredPoints.map(point => ({\n        type: 'Feature',\n        properties: {\n          id: point.id,\n          title: point.title,\n          description: point.description,\n          threat_level: point.threat_level,\n          type: point.type,\n          timestamp: point.timestamp\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: [point.longitude, point.latitude]\n        }\n      }))\n    };\n    console.log('GeoJSON data:', geojsonData);\n    try {\n      const source = map.current.getSource('intelligence-points');\n      if (source) {\n        console.log('Updating existing source with data');\n        source.setData(geojsonData);\n      } else {\n        console.log('Source not found, creating new source and layers');\n        // Add source if it doesn't exist\n        map.current.addSource('intelligence-points', {\n          type: 'geojson',\n          data: geojsonData\n        });\n\n        // Add circle layer\n        map.current.addLayer({\n          id: 'intelligence-circles',\n          type: 'circle',\n          source: 'intelligence-points',\n          paint: {\n            'circle-radius': ['case', ['==', ['get', 'threat_level'], 'high'], 15, ['==', ['get', 'threat_level'], 'medium'], 10, 8],\n            'circle-color': ['case', ['==', ['get', 'threat_level'], 'high'], '#ef4444', ['==', ['get', 'threat_level'], 'medium'], '#f59e0b', '#10b981'],\n            'circle-opacity': 0.9,\n            'circle-stroke-width': 3,\n            'circle-stroke-color': '#ffffff'\n          }\n        });\n\n        // Add labels layer\n        map.current.addLayer({\n          id: 'intelligence-labels',\n          type: 'symbol',\n          source: 'intelligence-points',\n          layout: {\n            'text-field': ['get', 'title'],\n            'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n            'text-offset': [0, 1.5],\n            'text-anchor': 'top',\n            'text-size': 12\n          },\n          paint: {\n            'text-color': '#000000',\n            'text-halo-color': '#ffffff',\n            'text-halo-width': 2\n          }\n        });\n\n        // Add click event\n        map.current.on('click', 'intelligence-circles', e => {\n          if (e.features && e.features[0]) {\n            const feature = e.features[0];\n            const point = points.find(p => {\n              var _feature$properties;\n              return p.id === ((_feature$properties = feature.properties) === null || _feature$properties === void 0 ? void 0 : _feature$properties.id);\n            });\n            if (point) {\n              var _point$metadata;\n              setSelectedPoint(point);\n\n              // Create popup\n              new mapboxgl.Popup().setLngLat([point.longitude, point.latitude]).setHTML(`\n                  <div class=\"p-3 max-w-sm\">\n                    <h3 class=\"font-semibold text-gray-900 mb-2\">${point.title}</h3>\n                    <p class=\"text-sm text-gray-600 mb-2\">${point.description}</p>\n                    <div class=\"flex items-center justify-between\">\n                      <span class=\"px-2 py-1 rounded text-xs font-medium ${point.threat_level === 'high' ? 'bg-red-100 text-red-800' : point.threat_level === 'medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}\">\n                        ${point.threat_level.toUpperCase()}\n                      </span>\n                      <span class=\"text-xs text-gray-500\">${point.type}</span>\n                    </div>\n                    ${(_point$metadata = point.metadata) !== null && _point$metadata !== void 0 && _point$metadata.filename ? `<p class=\"text-xs text-gray-400 mt-1\">Source: ${point.metadata.filename}</p>` : ''}\n                  </div>\n                `).addTo(map.current);\n            }\n          }\n        });\n\n        // Change cursor on hover\n        map.current.on('mouseenter', 'intelligence-circles', () => {\n          if (map.current) {\n            map.current.getCanvas().style.cursor = 'pointer';\n          }\n        });\n        map.current.on('mouseleave', 'intelligence-circles', () => {\n          if (map.current) {\n            map.current.getCanvas().style.cursor = '';\n          }\n        });\n      }\n\n      // Force map to repaint\n      if (map.current) {\n        map.current.triggerRepaint();\n      }\n    } catch (error) {\n      console.error('Error updating map:', error);\n    }\n  }, [points, filters, isLoaded]);\n  const toggleFilter = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: Array.isArray(prev[filterType]) ? prev[filterType].includes(value) ? prev[filterType].filter(item => item !== value) : [...prev[filterType], value] : prev[filterType]\n    }));\n  };\n  const exportMapData = () => {\n    const dataStr = JSON.stringify(points, null, 2);\n    const dataBlob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'intelligence_map_data.json';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  const getThreatLevelColor = level => {\n    switch (level) {\n      case 'high':\n        return 'text-red-600 bg-red-50 border-red-200';\n      case 'medium':\n        return 'text-yellow-600 bg-yellow-50 border-yellow-200';\n      default:\n        return 'text-green-600 bg-green-50 border-green-200';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-900 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(MapPin, {\n            className: \"h-6 w-6 text-red-600 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), \"Geospatial Intelligence Map\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-1\",\n          children: analysisData ? `Geographic intelligence from: ${analysisData.metadata.filename}` : 'Interactive map with intelligence points and threat analysis'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFilters(!showFilters),\n          className: `flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors ${showFilters ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log('Force refreshing map data...');\n            if (analysisData) {\n              loadAnalysisData();\n            } else {\n              loadMockData();\n            }\n          },\n          className: \"flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\",\n          title: \"Refresh map data\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log('Adding test points...');\n            const testPoints = [{\n              id: 'test_1',\n              latitude: 6.5244,\n              longitude: 3.3792,\n              title: 'Test Lagos Point',\n              description: 'Test point to verify map rendering',\n              threat_level: 'high',\n              type: 'incident',\n              timestamp: new Date().toISOString()\n            }, {\n              id: 'test_2',\n              latitude: 9.0765,\n              longitude: 7.3986,\n              title: 'Test Abuja Point',\n              description: 'Test point to verify map rendering',\n              threat_level: 'medium',\n              type: 'facility',\n              timestamp: new Date().toISOString()\n            }];\n            console.log('Setting test points:', testPoints);\n            setPoints(testPoints);\n          },\n          className: \"flex items-center space-x-2 px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors\",\n          title: \"Add test points\",\n          children: [/*#__PURE__*/_jsxDEV(MapPin, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportMapData,\n          className: \"flex items-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), analysisData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 border border-gray-200 rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-gray-900 mb-2\",\n        children: \"Debug Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-700 font-medium\",\n            children: \"Extracted Coordinates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-gray-900\",\n            children: analysisData.analysis.geographic_intelligence.coordinates.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this), analysisData.analysis.geographic_intelligence.coordinates.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mt-1 text-xs text-gray-600\",\n            children: analysisData.analysis.geographic_intelligence.coordinates.map((coord, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [coord.latitude.toFixed(4), \", \", coord.longitude.toFixed(4)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-700 font-medium\",\n            children: \"States Found:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-gray-900\",\n            children: analysisData.analysis.geographic_intelligence.states.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this), analysisData.analysis.geographic_intelligence.states.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 text-xs text-gray-600\",\n            children: analysisData.analysis.geographic_intelligence.states.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-700 font-medium\",\n            children: \"Map Points:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-gray-900\",\n            children: points.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 15\n          }, this), points.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mt-1 text-xs text-gray-600\",\n            children: points.map((point, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [point.title, \" (\", point.type, \")\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 9\n    }, this), analysisData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 border border-blue-200 rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-blue-900 mb-2\",\n        children: \"Document Analysis Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-700 font-medium\",\n            children: \"Total Locations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-blue-900\",\n            children: analysisData.analysis.geographic_intelligence.total_locations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-700 font-medium\",\n            children: \"States:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-blue-900\",\n            children: analysisData.analysis.geographic_intelligence.states.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-700 font-medium\",\n            children: \"Coordinates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-blue-900\",\n            children: analysisData.analysis.geographic_intelligence.coordinates.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-700 font-medium\",\n            children: \"Threat Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-blue-900\",\n            children: analysisData.analysis.sentiment_analysis.threat_level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 9\n    }, this), !analysisData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-yellow-50 border border-yellow-200 rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"h-5 w-5 text-yellow-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-yellow-800 font-medium\",\n          children: \"No Document Analysis Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-yellow-700 mt-1\",\n        children: \"Upload and analyze a document first to see real geographic intelligence data on the map. Currently showing sample data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-blue-600\",\n          children: points.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Total Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-red-600\",\n          children: points.filter(p => p.threat_level === 'high').length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"High Threat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-yellow-600\",\n          children: points.filter(p => p.threat_level === 'medium').length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Medium Threat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-green-600\",\n          children: points.filter(p => p.threat_level === 'low').length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Low Threat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 7\n    }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-4\",\n        children: \"Map Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-gray-900 mb-2\",\n            children: \"Threat Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: ['high', 'medium', 'low'].map(level => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: filters.threat_levels.includes(level),\n                onChange: () => toggleFilter('threat_levels', level),\n                className: \"mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 rounded text-xs font-medium ${getThreatLevelColor(level)}`,\n                children: level.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 21\n              }, this)]\n            }, level, true, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-gray-900 mb-2\",\n            children: \"Point Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: ['incident', 'surveillance', 'intelligence', 'facility', 'location'].map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: filters.point_types.includes(type),\n                onChange: () => toggleFilter('point_types', type),\n                className: \"mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"capitalize\",\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 21\n              }, this)]\n            }, type, true, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-gray-900 mb-2\",\n            children: \"Date Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: filters.date_range.start,\n              onChange: e => setFilters(prev => ({\n                ...prev,\n                date_range: {\n                  ...prev.date_range,\n                  start: e.target.value\n                }\n              })),\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: filters.date_range.end,\n              onChange: e => setFilters(prev => ({\n                ...prev,\n                date_range: {\n                  ...prev.date_range,\n                  end: e.target.value\n                }\n              })),\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow border overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        className: \"h-96 w-full\",\n        style: {\n          minHeight: '600px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this), !isLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center bg-gray-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(MapPin, {\n            className: \"h-8 w-8 text-blue-600 mx-auto mb-2 animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Loading map...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 7\n    }, this), selectedPoint && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"h-5 w-5 text-blue-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 13\n        }, this), \"Selected Point Details\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-gray-900\",\n            children: selectedPoint.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mt-1\",\n            children: selectedPoint.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `px-2 py-1 rounded text-xs font-medium ${getThreatLevelColor(selectedPoint.threat_level)}`,\n              children: selectedPoint.threat_level.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-500 capitalize\",\n              children: selectedPoint.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Coordinates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 20\n              }, this), \" \", selectedPoint.latitude.toFixed(4), \", \", selectedPoint.longitude.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Timestamp:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 20\n              }, this), \" \", new Date(selectedPoint.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 17\n            }, this), selectedPoint.metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Metadata:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"ml-4 mt-1\",\n                children: Object.entries(selectedPoint.metadata).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"text-xs\",\n                  children: [key, \": \", String(value)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 5\n  }, this);\n};\n_s(GeospatialMap, \"IIHkcx4/Q/stXz3Y5SrNNLdm5OI=\");\n_c = GeospatialMap;\nexport default GeospatialMap;\nvar _c;\n$RefreshReg$(_c, \"GeospatialMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","mapboxgl","MapPin","Filter","Download","Search","AlertTriangle","jsxDEV","_jsxDEV","accessToken","GeospatialMap","analysisData","_s","mapContainer","map","isLoaded","setIsLoaded","selectedPoint","setSelectedPoint","points","setPoints","filters","setFilters","threat_levels","point_types","date_range","start","end","showFilters","setShowFilters","isFullscreen","setIsFullscreen","current","Map","container","style","center","zoom","pitch","bearing","on","setupMapLayers","addControl","NavigationControl","FullscreenControl","remove","console","log","loadAnalysisData","loadMockData","analysis","geographic_intelligence","analysisPoints","geoIntel","threatLevel","sentiment_analysis","threat_level","toLowerCase","coordinates","states","other_locations","forEach","coord","index","push","id","latitude","longitude","title","location_name","description","confidence","toFixed","type","timestamp","metadata","uploaded_at","source","filename","nigerianCities","lat","lng","allLocations","cities","location","locationKey","trim","cityData","cleanedLocation","replace","partialMatch","Object","keys","find","key","includes","original_text","length","slice","join","mentioned_locations","bounds","LngLatBounds","point","extend","setTimeout","fitBounds","padding","maxZoom","mockPoints","severity","casualties","classification","coverage_radius","filteredPoints","filter","matchesThreatLevel","matchesType","matchesDateRange","pointDate","Date","startDate","endDate","geojsonData","features","properties","geometry","getSource","setData","addSource","data","addLayer","paint","layout","e","feature","p","_feature$properties","_point$metadata","Popup","setLngLat","setHTML","toUpperCase","addTo","getCanvas","cursor","triggerRepaint","error","toggleFilter","filterType","value","prev","Array","isArray","item","exportMapData","dataStr","JSON","stringify","dataBlob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","getThreatLevelColor","level","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","testPoints","toISOString","i","total_locations","checked","onChange","target","placeholder","ref","minHeight","toLocaleString","entries","String","_c","$RefreshReg$"],"sources":["/Users/abduldattijo/Downloads/intelaanalysis/src/components/GeospatialMap.tsx"],"sourcesContent":["// src/components/GeospatialMap.tsx - Interactive Geospatial Intelligence Map\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { MapPin, Layers, Filter, Download, Maximize2, Search, AlertTriangle } from 'lucide-react';\n\n// Set Mapbox access token\nmapboxgl.accessToken = 'pk.eyJ1IjoiYWJkdWxkYXR0aWpvMSIsImEiOiJjbWM2bW83Y3IwbmN4MmtzYWw0cHppbXF4In0.0pSWoI2VOyPyORqCROJc9g';\n\ninterface GeospatialPoint {\n  id: string;\n  latitude: number;\n  longitude: number;\n  title: string;\n  description: string;\n  threat_level: 'low' | 'medium' | 'high';\n  type: 'incident' | 'surveillance' | 'intelligence' | 'facility' | 'location';\n  timestamp: string;\n  metadata?: Record<string, any>;\n}\n\ninterface MapFilter {\n  threat_levels: string[];\n  point_types: string[];\n  date_range: {\n    start: string;\n    end: string;\n  };\n}\n\ninterface Document {\n  id: string;\n  content: string;\n  metadata: {\n    filename: string;\n    file_type: string;\n    uploaded_at: string;\n    file_size: number;\n  };\n  analysis: {\n    geographic_intelligence: {\n      states: string[];\n      cities: string[];\n      countries: string[];\n      coordinates: Array<{\n        latitude: number;\n        longitude: number;\n        location_name: string;\n        confidence: number;\n      }>;\n      total_locations: number;\n      other_locations: string[];\n    };\n    sentiment_analysis: {\n      threat_level: string;\n    };\n    entities: {\n      locations: string[];\n    };\n  };\n}\n\ninterface GeospatialMapProps {\n  analysisData?: Document | null;\n}\n\nconst GeospatialMap: React.FC<GeospatialMapProps> = ({ analysisData }) => {\n  const mapContainer = useRef<HTMLDivElement>(null);\n  const map = useRef<mapboxgl.Map | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedPoint, setSelectedPoint] = useState<GeospatialPoint | null>(null);\n  const [points, setPoints] = useState<GeospatialPoint[]>([]);\n  const [filters, setFilters] = useState<MapFilter>({\n    threat_levels: ['low', 'medium', 'high'],\n    point_types: ['incident', 'surveillance', 'intelligence', 'facility', 'location'],\n    date_range: {\n      start: '',\n      end: ''\n    }\n  });\n  const [showFilters, setShowFilters] = useState(false);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    if (!mapContainer.current) return;\n\n    // Initialize map\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/satellite-v9',\n      center: [7.4, 9.0], // Nigeria center\n      zoom: 6,\n      pitch: 0,\n      bearing: 0\n    });\n\n    map.current.on('load', () => {\n      setIsLoaded(true);\n      setupMapLayers();\n    });\n\n    // Add navigation controls\n    map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    // Add fullscreen control\n    map.current.addControl(new mapboxgl.FullscreenControl(), 'top-right');\n\n    return () => {\n      if (map.current) {\n        map.current.remove();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Load data from analysis when it changes\n    console.log('Analysis data changed:', analysisData);\n    if (analysisData) {\n      loadAnalysisData();\n    } else {\n      console.log('No analysis data, loading mock data');\n      loadMockData();\n    }\n  }, [analysisData]);\n\n  const loadAnalysisData = () => {\n    if (!analysisData) return;\n\n    console.log('=== DEBUGGING GEOSPATIAL DATA ===');\n    console.log('Analysis Data:', analysisData);\n    console.log('Geographic Intelligence:', analysisData.analysis.geographic_intelligence);\n\n    const analysisPoints: GeospatialPoint[] = [];\n    const geoIntel = analysisData.analysis.geographic_intelligence;\n    const threatLevel = analysisData.analysis.sentiment_analysis.threat_level.toLowerCase() as 'low' | 'medium' | 'high';\n\n    console.log('Coordinates from analysis:', geoIntel.coordinates);\n    console.log('States from analysis:', geoIntel.states);\n    console.log('Other locations from analysis:', geoIntel.other_locations);\n\n    // Add coordinates from analysis\n    geoIntel.coordinates.forEach((coord, index) => {\n      console.log(`Processing coordinate ${index}:`, coord);\n      analysisPoints.push({\n        id: `coord_${index}`,\n        latitude: coord.latitude,\n        longitude: coord.longitude,\n        title: coord.location_name || 'Identified Location',\n        description: `Location extracted from document analysis with ${(coord.confidence * 100).toFixed(1)}% confidence`,\n        threat_level: threatLevel,\n        type: 'location',\n        timestamp: analysisData.metadata.uploaded_at,\n        metadata: {\n          confidence: coord.confidence,\n          source: 'document_analysis',\n          filename: analysisData.metadata.filename\n        }\n      });\n    });\n\n    // Create points for major Nigerian cities mentioned in states\n    const nigerianCities = {\n      // State capitals and major cities\n      'lagos': { lat: 6.5244, lng: 3.3792 },\n      'abuja': { lat: 9.0765, lng: 7.3986 },\n      'kano': { lat: 12.0022, lng: 8.5920 },\n      'ibadan': { lat: 7.3775, lng: 3.9470 },\n      'port harcourt': { lat: 4.8156, lng: 7.0498 },\n      'kaduna': { lat: 10.5105, lng: 7.4165 },\n      'benin city': { lat: 6.3350, lng: 5.6037 },\n      'maiduguri': { lat: 11.8311, lng: 13.1510 },\n      'jos': { lat: 9.8965, lng: 8.8583 },\n      'ilorin': { lat: 8.5000, lng: 4.5500 },\n      'abeokuta': { lat: 7.1475, lng: 3.3619 },\n      'akure': { lat: 7.2571, lng: 5.2058 },\n      'awka': { lat: 6.2120, lng: 7.0740 },\n      'bauchi': { lat: 10.3158, lng: 9.8442 },\n      'calabar': { lat: 4.9516, lng: 8.3220 },\n      'enugu': { lat: 6.5244, lng: 7.5112 },\n      'gombe': { lat: 10.2840, lng: 11.1610 },\n      'katsina': { lat: 12.9908, lng: 7.6018 },\n      'lafia': { lat: 8.4833, lng: 8.5167 },\n      'lokoja': { lat: 7.7974, lng: 6.7337 },\n      'makurdi': { lat: 7.7340, lng: 8.5120 },\n      'minna': { lat: 9.6134, lng: 6.5560 },\n      'oshogbo': { lat: 7.7719, lng: 4.5567 },\n      'owerri': { lat: 5.4840, lng: 7.0351 },\n      'sokoto': { lat: 13.0609, lng: 5.2476 },\n      'umuahia': { lat: 5.5265, lng: 7.4906 },\n      'uyo': { lat: 5.0515, lng: 7.9307 },\n      'yenagoa': { lat: 4.9267, lng: 6.2676 },\n      'yola': { lat: 9.2000, lng: 12.4833 },\n\n      // Major commercial cities and LGAs\n      'warri': { lat: 5.5167, lng: 5.7500 },\n      'aba': { lat: 5.1068, lng: 7.3668 },\n      'onitsha': { lat: 6.1667, lng: 6.7833 },\n      'zaria': { lat: 11.0804, lng: 7.7170 },\n      'surulere': { lat: 6.5027, lng: 3.3584 },\n      'ikeja': { lat: 6.5962, lng: 3.3431 },\n      'agege': { lat: 6.6186, lng: 3.3403 },\n      'alimosho': { lat: 6.5833, lng: 3.2667 },\n      'ikorodu': { lat: 6.6019, lng: 3.5106 },\n      'victoria island': { lat: 6.4281, lng: 3.4219 },\n      'apapa': { lat: 6.4474, lng: 3.3903 },\n      'bonny': { lat: 4.4500, lng: 7.1667 },\n      'yaba': { lat: 6.5095, lng: 3.3711 },\n      'mushin': { lat: 6.5240, lng: 3.3548 }\n    };\n\n    // Add points for mentioned states and cities with improved matching\n    const allLocations = [\n      ...geoIntel.states,\n      ...geoIntel.cities,\n      ...geoIntel.other_locations\n    ];\n\n    console.log('All locations to process:', allLocations);\n\n    allLocations.forEach((location, index) => {\n      const locationKey = location.toLowerCase().trim();\n\n      // Direct match first\n      let cityData = nigerianCities[locationKey as keyof typeof nigerianCities];\n\n      // If no direct match, try partial matching\n      if (!cityData) {\n        // Try removing common suffixes\n        const cleanedLocation = locationKey\n          .replace(/\\s+state$/i, '')\n          .replace(/\\s+lga$/i, '')\n          .replace(/\\s+local government$/i, '')\n          .replace(/\\s+area$/i, '')\n          .replace(/\\s+city$/i, '')\n          .trim();\n\n        cityData = nigerianCities[cleanedLocation as keyof typeof nigerianCities];\n\n        // If still no match, try finding partial matches in our database\n        if (!cityData) {\n          const partialMatch = Object.keys(nigerianCities).find(key =>\n            key.includes(cleanedLocation) || cleanedLocation.includes(key)\n          );\n          if (partialMatch) {\n            cityData = nigerianCities[partialMatch as keyof typeof nigerianCities];\n          }\n        }\n      }\n\n      console.log(`Checking location \"${location}\" (key: \"${locationKey}\"):`, cityData);\n\n      if (cityData) {\n        analysisPoints.push({\n          id: `location_${index}`,\n          latitude: cityData.lat,\n          longitude: cityData.lng,\n          title: `${location} (Mentioned)`,\n          description: `Location \"${location}\" mentioned in document: ${analysisData.metadata.filename}`,\n          threat_level: threatLevel,\n          type: 'intelligence',\n          timestamp: analysisData.metadata.uploaded_at,\n          metadata: {\n            source: 'location_mention',\n            original_text: location,\n            filename: analysisData.metadata.filename\n          }\n        });\n      } else {\n        console.log(`No coordinates found for location: ${location}`);\n      }\n    });\n\n    // If no specific coordinates but locations mentioned, focus on Nigeria\n    if (analysisPoints.length === 0 && allLocations.length > 0) {\n      console.log('No specific points found, adding general Nigeria reference');\n      // Add a general Nigeria point\n      analysisPoints.push({\n        id: 'nigeria_general',\n        latitude: 9.0820,\n        longitude: 8.6753,\n        title: 'Nigeria (General Reference)',\n        description: `Document mentions Nigerian locations but no specific coordinates found. Locations: ${allLocations.slice(0, 3).join(', ')}${allLocations.length > 3 ? '...' : ''}`,\n        threat_level: threatLevel,\n        type: 'intelligence',\n        timestamp: analysisData.metadata.uploaded_at,\n        metadata: {\n          source: 'general_reference',\n          mentioned_locations: allLocations,\n          filename: analysisData.metadata.filename\n        }\n      });\n    }\n\n    console.log('Final analysis points:', analysisPoints);\n    setPoints(analysisPoints);\n\n    // Adjust map view to show all points\n    if (analysisPoints.length > 0 && map.current) {\n      console.log('Adjusting map bounds for', analysisPoints.length, 'points');\n      const bounds = new mapboxgl.LngLatBounds();\n      analysisPoints.forEach(point => {\n        bounds.extend([point.longitude, point.latitude]);\n      });\n\n      setTimeout(() => {\n        if (map.current) {\n          console.log('Fitting map to bounds:', bounds);\n          map.current.fitBounds(bounds, { padding: 50, maxZoom: 12 });\n        }\n      }, 1000);\n    } else {\n      console.log('No points to display on map');\n    }\n  };\n\n  const loadMockData = () => {\n    // Fallback mock data when no analysis data is available\n    const mockPoints: GeospatialPoint[] = [\n      {\n        id: '1',\n        latitude: 6.5244,\n        longitude: 3.3792,\n        title: 'Lagos Security Incident',\n        description: 'Suspicious activity reported in Victoria Island area',\n        threat_level: 'high',\n        type: 'incident',\n        timestamp: '2025-06-20T10:30:00Z',\n        metadata: { severity: 8, casualties: 0 }\n      },\n      {\n        id: '2',\n        latitude: 9.0765,\n        longitude: 7.3986,\n        title: 'Abuja Intelligence Facility',\n        description: 'Central intelligence coordination center',\n        threat_level: 'low',\n        type: 'facility',\n        timestamp: '2025-06-20T08:00:00Z',\n        metadata: { classification: 'confidential' }\n      },\n      {\n        id: '3',\n        latitude: 7.3775,\n        longitude: 3.9470,\n        title: 'Ibadan Surveillance Point',\n        description: 'Active monitoring station for regional intelligence',\n        threat_level: 'medium',\n        type: 'surveillance',\n        timestamp: '2025-06-20T14:15:00Z',\n        metadata: { coverage_radius: 25 }\n      }\n    ];\n\n    setPoints(mockPoints);\n  };\n\n  const setupMapLayers = () => {\n    if (!map.current || !isLoaded) return;\n    console.log('Setting up initial map layers');\n\n    // Don't setup layers here, let the useEffect handle it when points are available\n    // This prevents the timing issue where layers are created before data is ready\n  };\n  useEffect(() => {\n    if (!map.current || !isLoaded || points.length === 0) return;\n\n    console.log('=== UPDATING MAP WITH POINTS ===');\n    console.log('Points to display:', points);\n    console.log('Map loaded:', isLoaded);\n\n    const filteredPoints = points.filter(point => {\n      const matchesThreatLevel = filters.threat_levels.includes(point.threat_level);\n      const matchesType = filters.point_types.includes(point.type);\n\n      let matchesDateRange = true;\n      if (filters.date_range.start && filters.date_range.end) {\n        const pointDate = new Date(point.timestamp);\n        const startDate = new Date(filters.date_range.start);\n        const endDate = new Date(filters.date_range.end);\n        matchesDateRange = pointDate >= startDate && pointDate <= endDate;\n      }\n\n      return matchesThreatLevel && matchesType && matchesDateRange;\n    });\n\n    console.log('Filtered points:', filteredPoints);\n\n    const geojsonData = {\n      type: 'FeatureCollection' as const,\n      features: filteredPoints.map(point => ({\n        type: 'Feature' as const,\n        properties: {\n          id: point.id,\n          title: point.title,\n          description: point.description,\n          threat_level: point.threat_level,\n          type: point.type,\n          timestamp: point.timestamp\n        },\n        geometry: {\n          type: 'Point' as const,\n          coordinates: [point.longitude, point.latitude]\n        }\n      }))\n    };\n\n    console.log('GeoJSON data:', geojsonData);\n\n    try {\n      const source = map.current.getSource('intelligence-points') as mapboxgl.GeoJSONSource;\n      if (source) {\n        console.log('Updating existing source with data');\n        source.setData(geojsonData);\n      } else {\n        console.log('Source not found, creating new source and layers');\n        // Add source if it doesn't exist\n        map.current.addSource('intelligence-points', {\n          type: 'geojson',\n          data: geojsonData\n        });\n\n        // Add circle layer\n        map.current.addLayer({\n          id: 'intelligence-circles',\n          type: 'circle',\n          source: 'intelligence-points',\n          paint: {\n            'circle-radius': [\n              'case',\n              ['==', ['get', 'threat_level'], 'high'], 15,\n              ['==', ['get', 'threat_level'], 'medium'], 10,\n              8\n            ],\n            'circle-color': [\n              'case',\n              ['==', ['get', 'threat_level'], 'high'], '#ef4444',\n              ['==', ['get', 'threat_level'], 'medium'], '#f59e0b',\n              '#10b981'\n            ],\n            'circle-opacity': 0.9,\n            'circle-stroke-width': 3,\n            'circle-stroke-color': '#ffffff'\n          }\n        });\n\n        // Add labels layer\n        map.current.addLayer({\n          id: 'intelligence-labels',\n          type: 'symbol',\n          source: 'intelligence-points',\n          layout: {\n            'text-field': ['get', 'title'],\n            'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n            'text-offset': [0, 1.5],\n            'text-anchor': 'top',\n            'text-size': 12\n          },\n          paint: {\n            'text-color': '#000000',\n            'text-halo-color': '#ffffff',\n            'text-halo-width': 2\n          }\n        });\n\n        // Add click event\n        map.current.on('click', 'intelligence-circles', (e) => {\n          if (e.features && e.features[0]) {\n            const feature = e.features[0];\n            const point = points.find(p => p.id === feature.properties?.id);\n            if (point) {\n              setSelectedPoint(point);\n\n              // Create popup\n              new mapboxgl.Popup()\n                .setLngLat([point.longitude, point.latitude])\n                .setHTML(`\n                  <div class=\"p-3 max-w-sm\">\n                    <h3 class=\"font-semibold text-gray-900 mb-2\">${point.title}</h3>\n                    <p class=\"text-sm text-gray-600 mb-2\">${point.description}</p>\n                    <div class=\"flex items-center justify-between\">\n                      <span class=\"px-2 py-1 rounded text-xs font-medium ${\n                        point.threat_level === 'high' ? 'bg-red-100 text-red-800' :\n                        point.threat_level === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }\">\n                        ${point.threat_level.toUpperCase()}\n                      </span>\n                      <span class=\"text-xs text-gray-500\">${point.type}</span>\n                    </div>\n                    ${point.metadata?.filename ? `<p class=\"text-xs text-gray-400 mt-1\">Source: ${point.metadata.filename}</p>` : ''}\n                  </div>\n                `)\n                .addTo(map.current!);\n            }\n          }\n        });\n\n        // Change cursor on hover\n        map.current.on('mouseenter', 'intelligence-circles', () => {\n          if (map.current) {\n            map.current.getCanvas().style.cursor = 'pointer';\n          }\n        });\n\n        map.current.on('mouseleave', 'intelligence-circles', () => {\n          if (map.current) {\n            map.current.getCanvas().style.cursor = '';\n          }\n        });\n      }\n\n      // Force map to repaint\n      if (map.current) {\n        map.current.triggerRepaint();\n      }\n\n    } catch (error) {\n      console.error('Error updating map:', error);\n    }\n  }, [points, filters, isLoaded]);\n\n  const toggleFilter = (filterType: keyof MapFilter, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: Array.isArray(prev[filterType])\n        ? (prev[filterType] as string[]).includes(value)\n          ? (prev[filterType] as string[]).filter(item => item !== value)\n          : [...(prev[filterType] as string[]), value]\n        : prev[filterType]\n    }));\n  };\n\n  const exportMapData = () => {\n    const dataStr = JSON.stringify(points, null, 2);\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'intelligence_map_data.json';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const getThreatLevelColor = (level: string) => {\n    switch (level) {\n      case 'high': return 'text-red-600 bg-red-50 border-red-200';\n      case 'medium': return 'text-yellow-600 bg-yellow-50 border-yellow-200';\n      default: return 'text-green-600 bg-green-50 border-green-200';\n    }\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n            <MapPin className=\"h-6 w-6 text-red-600 mr-2\" />\n            Geospatial Intelligence Map\n          </h2>\n          <p className=\"text-gray-600 mt-1\">\n            {analysisData\n              ? `Geographic intelligence from: ${analysisData.metadata.filename}`\n              : 'Interactive map with intelligence points and threat analysis'\n            }\n          </p>\n        </div>\n\n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={() => setShowFilters(!showFilters)}\n            className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors ${\n              showFilters ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n            }`}\n          >\n            <Filter className=\"h-4 w-4\" />\n            <span>Filters</span>\n          </button>\n\n          <button\n            onClick={() => {\n              console.log('Force refreshing map data...');\n              if (analysisData) {\n                loadAnalysisData();\n              } else {\n                loadMockData();\n              }\n            }}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\n            title=\"Refresh map data\"\n          >\n            <Search className=\"h-4 w-4\" />\n            <span>Refresh</span>\n          </button>\n\n          <button\n            onClick={() => {\n              console.log('Adding test points...');\n              const testPoints: GeospatialPoint[] = [\n                {\n                  id: 'test_1',\n                  latitude: 6.5244,\n                  longitude: 3.3792,\n                  title: 'Test Lagos Point',\n                  description: 'Test point to verify map rendering',\n                  threat_level: 'high',\n                  type: 'incident',\n                  timestamp: new Date().toISOString()\n                },\n                {\n                  id: 'test_2',\n                  latitude: 9.0765,\n                  longitude: 7.3986,\n                  title: 'Test Abuja Point',\n                  description: 'Test point to verify map rendering',\n                  threat_level: 'medium',\n                  type: 'facility',\n                  timestamp: new Date().toISOString()\n                }\n              ];\n              console.log('Setting test points:', testPoints);\n              setPoints(testPoints);\n            }}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors\"\n            title=\"Add test points\"\n          >\n            <MapPin className=\"h-4 w-4\" />\n            <span>Test</span>\n          </button>\n\n          <button\n            onClick={exportMapData}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n          >\n            <Download className=\"h-4 w-4\" />\n            <span>Export</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Debug Panel */}\n      {analysisData && (\n        <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n          <h3 className=\"font-semibold text-gray-900 mb-2\">Debug Information</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-700 font-medium\">Extracted Coordinates:</span>\n              <span className=\"ml-2 text-gray-900\">{analysisData.analysis.geographic_intelligence.coordinates.length}</span>\n              {analysisData.analysis.geographic_intelligence.coordinates.length > 0 && (\n                <ul className=\"mt-1 text-xs text-gray-600\">\n                  {analysisData.analysis.geographic_intelligence.coordinates.map((coord, i) => (\n                    <li key={i}>{coord.latitude.toFixed(4)}, {coord.longitude.toFixed(4)}</li>\n                  ))}\n                </ul>\n              )}\n            </div>\n            <div>\n              <span className=\"text-gray-700 font-medium\">States Found:</span>\n              <span className=\"ml-2 text-gray-900\">{analysisData.analysis.geographic_intelligence.states.length}</span>\n              {analysisData.analysis.geographic_intelligence.states.length > 0 && (\n                <div className=\"mt-1 text-xs text-gray-600\">\n                  {analysisData.analysis.geographic_intelligence.states.join(', ')}\n                </div>\n              )}\n            </div>\n            <div>\n              <span className=\"text-gray-700 font-medium\">Map Points:</span>\n              <span className=\"ml-2 text-gray-900\">{points.length}</span>\n              {points.length > 0 && (\n                <ul className=\"mt-1 text-xs text-gray-600\">\n                  {points.map((point, i) => (\n                    <li key={i}>{point.title} ({point.type})</li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Analysis Data Summary */}\n      {analysisData && (\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <h3 className=\"font-semibold text-blue-900 mb-2\">Document Analysis Summary</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 text-sm\">\n            <div>\n              <span className=\"text-blue-700 font-medium\">Total Locations:</span>\n              <span className=\"ml-2 text-blue-900\">{analysisData.analysis.geographic_intelligence.total_locations}</span>\n            </div>\n            <div>\n              <span className=\"text-blue-700 font-medium\">States:</span>\n              <span className=\"ml-2 text-blue-900\">{analysisData.analysis.geographic_intelligence.states.length}</span>\n            </div>\n            <div>\n              <span className=\"text-blue-700 font-medium\">Coordinates:</span>\n              <span className=\"ml-2 text-blue-900\">{analysisData.analysis.geographic_intelligence.coordinates.length}</span>\n            </div>\n            <div>\n              <span className=\"text-blue-700 font-medium\">Threat Level:</span>\n              <span className=\"ml-2 text-blue-900\">{analysisData.analysis.sentiment_analysis.threat_level}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* No Data Warning */}\n      {!analysisData && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-center\">\n            <AlertTriangle className=\"h-5 w-5 text-yellow-600 mr-2\" />\n            <h3 className=\"text-yellow-800 font-medium\">No Document Analysis Data</h3>\n          </div>\n          <p className=\"text-yellow-700 mt-1\">\n            Upload and analyze a document first to see real geographic intelligence data on the map.\n            Currently showing sample data.\n          </p>\n        </div>\n      )}\n\n      {/* Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white p-4 rounded-lg shadow border\">\n          <div className=\"text-2xl font-bold text-blue-600\">{points.length}</div>\n          <div className=\"text-sm text-gray-500\">Total Points</div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow border\">\n          <div className=\"text-2xl font-bold text-red-600\">\n            {points.filter(p => p.threat_level === 'high').length}\n          </div>\n          <div className=\"text-sm text-gray-500\">High Threat</div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow border\">\n          <div className=\"text-2xl font-bold text-yellow-600\">\n            {points.filter(p => p.threat_level === 'medium').length}\n          </div>\n          <div className=\"text-sm text-gray-500\">Medium Threat</div>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow border\">\n          <div className=\"text-2xl font-bold text-green-600\">\n            {points.filter(p => p.threat_level === 'low').length}\n          </div>\n          <div className=\"text-sm text-gray-500\">Low Threat</div>\n        </div>\n      </div>\n\n      {/* Filters Panel */}\n      {showFilters && (\n        <div className=\"bg-white p-6 rounded-lg shadow border\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Map Filters</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {/* Threat Level Filter */}\n            <div>\n              <h4 className=\"font-medium text-gray-900 mb-2\">Threat Levels</h4>\n              <div className=\"space-y-2\">\n                {['high', 'medium', 'low'].map((level) => (\n                  <label key={level} className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={filters.threat_levels.includes(level)}\n                      onChange={() => toggleFilter('threat_levels', level)}\n                      className=\"mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <span className={`px-2 py-1 rounded text-xs font-medium ${getThreatLevelColor(level)}`}>\n                      {level.toUpperCase()}\n                    </span>\n                  </label>\n                ))}\n              </div>\n            </div>\n\n            {/* Point Type Filter */}\n            <div>\n              <h4 className=\"font-medium text-gray-900 mb-2\">Point Types</h4>\n              <div className=\"space-y-2\">\n                {['incident', 'surveillance', 'intelligence', 'facility', 'location'].map((type) => (\n                  <label key={type} className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={filters.point_types.includes(type)}\n                      onChange={() => toggleFilter('point_types', type)}\n                      className=\"mr-2 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <span className=\"capitalize\">{type}</span>\n                  </label>\n                ))}\n              </div>\n            </div>\n\n            {/* Date Range Filter */}\n            <div>\n              <h4 className=\"font-medium text-gray-900 mb-2\">Date Range</h4>\n              <div className=\"space-y-2\">\n                <input\n                  type=\"date\"\n                  value={filters.date_range.start}\n                  onChange={(e) => setFilters(prev => ({\n                    ...prev,\n                    date_range: { ...prev.date_range, start: e.target.value }\n                  }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Start Date\"\n                />\n                <input\n                  type=\"date\"\n                  value={filters.date_range.end}\n                  onChange={(e) => setFilters(prev => ({\n                    ...prev,\n                    date_range: { ...prev.date_range, end: e.target.value }\n                  }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"End Date\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Map Container */}\n      <div className=\"bg-white rounded-lg shadow border overflow-hidden\">\n        <div\n          ref={mapContainer}\n          className=\"h-96 w-full\"\n          style={{ minHeight: '600px' }}\n        />\n\n        {!isLoaded && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50\">\n            <div className=\"text-center\">\n              <MapPin className=\"h-8 w-8 text-blue-600 mx-auto mb-2 animate-pulse\" />\n              <p className=\"text-gray-600\">Loading map...</p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Selected Point Details */}\n      {selectedPoint && (\n        <div className=\"bg-white p-6 rounded-lg shadow border\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <AlertTriangle className=\"h-5 w-5 text-blue-600 mr-2\" />\n            Selected Point Details\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"font-medium text-gray-900\">{selectedPoint.title}</h4>\n              <p className=\"text-gray-600 mt-1\">{selectedPoint.description}</p>\n              <div className=\"mt-3 flex items-center space-x-4\">\n                <span className={`px-2 py-1 rounded text-xs font-medium ${getThreatLevelColor(selectedPoint.threat_level)}`}>\n                  {selectedPoint.threat_level.toUpperCase()}\n                </span>\n                <span className=\"text-sm text-gray-500 capitalize\">{selectedPoint.type}</span>\n              </div>\n            </div>\n            <div>\n              <div className=\"text-sm text-gray-500\">\n                <p><strong>Coordinates:</strong> {selectedPoint.latitude.toFixed(4)}, {selectedPoint.longitude.toFixed(4)}</p>\n                <p><strong>Timestamp:</strong> {new Date(selectedPoint.timestamp).toLocaleString()}</p>\n                {selectedPoint.metadata && (\n                  <div className=\"mt-2\">\n                    <strong>Metadata:</strong>\n                    <ul className=\"ml-4 mt-1\">\n                      {Object.entries(selectedPoint.metadata).map(([key, value]) => (\n                        <li key={key} className=\"text-xs\">\n                          {key}: {String(value)}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GeospatialMap;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,MAAM,EAAUC,MAAM,EAAEC,QAAQ,EAAaC,MAAM,EAAEC,aAAa,QAAQ,cAAc;;AAEjG;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAP,QAAQ,CAACQ,WAAW,GAAG,mGAAmG;AA2D1H,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAMC,YAAY,GAAGd,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAMe,GAAG,GAAGf,MAAM,CAAsB,IAAI,CAAC;EAC7C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAyB,IAAI,CAAC;EAChF,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAoB,EAAE,CAAC;EAC3D,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAY;IAChDuB,aAAa,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC;IACxCC,WAAW,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,CAAC;IACjFC,UAAU,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;IACP;EACF,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAEvDF,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,YAAY,CAACmB,OAAO,EAAE;;IAE3B;IACAlB,GAAG,CAACkB,OAAO,GAAG,IAAI/B,QAAQ,CAACgC,GAAG,CAAC;MAC7BC,SAAS,EAAErB,YAAY,CAACmB,OAAO;MAC/BG,KAAK,EAAE,qCAAqC;MAC5CC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;MAAE;MACpBC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,OAAO,EAAE;IACX,CAAC,CAAC;IAEFzB,GAAG,CAACkB,OAAO,CAACQ,EAAE,CAAC,MAAM,EAAE,MAAM;MAC3BxB,WAAW,CAAC,IAAI,CAAC;MACjByB,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC;;IAEF;IACA3B,GAAG,CAACkB,OAAO,CAACU,UAAU,CAAC,IAAIzC,QAAQ,CAAC0C,iBAAiB,CAAC,CAAC,EAAE,WAAW,CAAC;;IAErE;IACA7B,GAAG,CAACkB,OAAO,CAACU,UAAU,CAAC,IAAIzC,QAAQ,CAAC2C,iBAAiB,CAAC,CAAC,EAAE,WAAW,CAAC;IAErE,OAAO,MAAM;MACX,IAAI9B,GAAG,CAACkB,OAAO,EAAE;QACflB,GAAG,CAACkB,OAAO,CAACa,MAAM,CAAC,CAAC;MACtB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN/C,SAAS,CAAC,MAAM;IACd;IACAgD,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEpC,YAAY,CAAC;IACnD,IAAIA,YAAY,EAAE;MAChBqC,gBAAgB,CAAC,CAAC;IACpB,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDE,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACtC,YAAY,CAAC,CAAC;EAElB,MAAMqC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACrC,YAAY,EAAE;IAEnBmC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChDD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEpC,YAAY,CAAC;IAC3CmC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEpC,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAAC;IAEtF,MAAMC,cAAiC,GAAG,EAAE;IAC5C,MAAMC,QAAQ,GAAG1C,YAAY,CAACuC,QAAQ,CAACC,uBAAuB;IAC9D,MAAMG,WAAW,GAAG3C,YAAY,CAACuC,QAAQ,CAACK,kBAAkB,CAACC,YAAY,CAACC,WAAW,CAAC,CAA8B;IAEpHX,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEM,QAAQ,CAACK,WAAW,CAAC;IAC/DZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEM,QAAQ,CAACM,MAAM,CAAC;IACrDb,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEM,QAAQ,CAACO,eAAe,CAAC;;IAEvE;IACAP,QAAQ,CAACK,WAAW,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAC7CjB,OAAO,CAACC,GAAG,CAAC,yBAAyBgB,KAAK,GAAG,EAAED,KAAK,CAAC;MACrDV,cAAc,CAACY,IAAI,CAAC;QAClBC,EAAE,EAAE,SAASF,KAAK,EAAE;QACpBG,QAAQ,EAAEJ,KAAK,CAACI,QAAQ;QACxBC,SAAS,EAAEL,KAAK,CAACK,SAAS;QAC1BC,KAAK,EAAEN,KAAK,CAACO,aAAa,IAAI,qBAAqB;QACnDC,WAAW,EAAE,kDAAkD,CAACR,KAAK,CAACS,UAAU,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,cAAc;QAChHhB,YAAY,EAAEF,WAAW;QACzBmB,IAAI,EAAE,UAAU;QAChBC,SAAS,EAAE/D,YAAY,CAACgE,QAAQ,CAACC,WAAW;QAC5CD,QAAQ,EAAE;UACRJ,UAAU,EAAET,KAAK,CAACS,UAAU;UAC5BM,MAAM,EAAE,mBAAmB;UAC3BC,QAAQ,EAAEnE,YAAY,CAACgE,QAAQ,CAACG;QAClC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMC,cAAc,GAAG;MACrB;MACA,OAAO,EAAE;QAAEC,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,MAAM,EAAE;QAAED,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,QAAQ,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACtC,eAAe,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MAC7C,QAAQ,EAAE;QAAED,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,YAAY,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MAC1C,WAAW,EAAE;QAAED,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAQ,CAAC;MAC3C,KAAK,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACnC,QAAQ,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACtC,UAAU,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACxC,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,MAAM,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACpC,QAAQ,EAAE;QAAED,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,SAAS,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,OAAO,EAAE;QAAED,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAQ,CAAC;MACvC,SAAS,EAAE;QAAED,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAO,CAAC;MACxC,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,QAAQ,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACtC,SAAS,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,SAAS,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,QAAQ,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACtC,QAAQ,EAAE;QAAED,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,SAAS,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,KAAK,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACnC,SAAS,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,MAAM,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAQ,CAAC;MAErC;MACA,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,KAAK,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACnC,SAAS,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,OAAO,EAAE;QAAED,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAO,CAAC;MACtC,UAAU,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACxC,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,UAAU,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACxC,SAAS,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACvC,iBAAiB,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MAC/C,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,OAAO,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACrC,MAAM,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAC;MACpC,QAAQ,EAAE;QAAED,GAAG,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO;IACvC,CAAC;;IAED;IACA,MAAMC,YAAY,GAAG,CACnB,GAAG7B,QAAQ,CAACM,MAAM,EAClB,GAAGN,QAAQ,CAAC8B,MAAM,EAClB,GAAG9B,QAAQ,CAACO,eAAe,CAC5B;IAEDd,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEmC,YAAY,CAAC;IAEtDA,YAAY,CAACrB,OAAO,CAAC,CAACuB,QAAQ,EAAErB,KAAK,KAAK;MACxC,MAAMsB,WAAW,GAAGD,QAAQ,CAAC3B,WAAW,CAAC,CAAC,CAAC6B,IAAI,CAAC,CAAC;;MAEjD;MACA,IAAIC,QAAQ,GAAGR,cAAc,CAACM,WAAW,CAAgC;;MAEzE;MACA,IAAI,CAACE,QAAQ,EAAE;QACb;QACA,MAAMC,eAAe,GAAGH,WAAW,CAChCI,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CACzBA,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CACvBA,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC,CACpCA,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CACxBA,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CACxBH,IAAI,CAAC,CAAC;QAETC,QAAQ,GAAGR,cAAc,CAACS,eAAe,CAAgC;;QAEzE;QACA,IAAI,CAACD,QAAQ,EAAE;UACb,MAAMG,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACb,cAAc,CAAC,CAACc,IAAI,CAACC,GAAG,IACvDA,GAAG,CAACC,QAAQ,CAACP,eAAe,CAAC,IAAIA,eAAe,CAACO,QAAQ,CAACD,GAAG,CAC/D,CAAC;UACD,IAAIJ,YAAY,EAAE;YAChBH,QAAQ,GAAGR,cAAc,CAACW,YAAY,CAAgC;UACxE;QACF;MACF;MAEA5C,OAAO,CAACC,GAAG,CAAC,sBAAsBqC,QAAQ,YAAYC,WAAW,KAAK,EAAEE,QAAQ,CAAC;MAEjF,IAAIA,QAAQ,EAAE;QACZnC,cAAc,CAACY,IAAI,CAAC;UAClBC,EAAE,EAAE,YAAYF,KAAK,EAAE;UACvBG,QAAQ,EAAEqB,QAAQ,CAACP,GAAG;UACtBb,SAAS,EAAEoB,QAAQ,CAACN,GAAG;UACvBb,KAAK,EAAE,GAAGgB,QAAQ,cAAc;UAChCd,WAAW,EAAE,aAAac,QAAQ,4BAA4BzE,YAAY,CAACgE,QAAQ,CAACG,QAAQ,EAAE;UAC9FtB,YAAY,EAAEF,WAAW;UACzBmB,IAAI,EAAE,cAAc;UACpBC,SAAS,EAAE/D,YAAY,CAACgE,QAAQ,CAACC,WAAW;UAC5CD,QAAQ,EAAE;YACRE,MAAM,EAAE,kBAAkB;YAC1BmB,aAAa,EAAEZ,QAAQ;YACvBN,QAAQ,EAAEnE,YAAY,CAACgE,QAAQ,CAACG;UAClC;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLhC,OAAO,CAACC,GAAG,CAAC,sCAAsCqC,QAAQ,EAAE,CAAC;MAC/D;IACF,CAAC,CAAC;;IAEF;IACA,IAAIhC,cAAc,CAAC6C,MAAM,KAAK,CAAC,IAAIf,YAAY,CAACe,MAAM,GAAG,CAAC,EAAE;MAC1DnD,OAAO,CAACC,GAAG,CAAC,4DAA4D,CAAC;MACzE;MACAK,cAAc,CAACY,IAAI,CAAC;QAClBC,EAAE,EAAE,iBAAiB;QACrBC,QAAQ,EAAE,MAAM;QAChBC,SAAS,EAAE,MAAM;QACjBC,KAAK,EAAE,6BAA6B;QACpCE,WAAW,EAAE,sFAAsFY,YAAY,CAACgB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,GAAGjB,YAAY,CAACe,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE,EAAE;QAC/KzC,YAAY,EAAEF,WAAW;QACzBmB,IAAI,EAAE,cAAc;QACpBC,SAAS,EAAE/D,YAAY,CAACgE,QAAQ,CAACC,WAAW;QAC5CD,QAAQ,EAAE;UACRE,MAAM,EAAE,mBAAmB;UAC3BuB,mBAAmB,EAAElB,YAAY;UACjCJ,QAAQ,EAAEnE,YAAY,CAACgE,QAAQ,CAACG;QAClC;MACF,CAAC,CAAC;IACJ;IAEAhC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEK,cAAc,CAAC;IACrDhC,SAAS,CAACgC,cAAc,CAAC;;IAEzB;IACA,IAAIA,cAAc,CAAC6C,MAAM,GAAG,CAAC,IAAInF,GAAG,CAACkB,OAAO,EAAE;MAC5Cc,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,cAAc,CAAC6C,MAAM,EAAE,QAAQ,CAAC;MACxE,MAAMI,MAAM,GAAG,IAAIpG,QAAQ,CAACqG,YAAY,CAAC,CAAC;MAC1ClD,cAAc,CAACS,OAAO,CAAC0C,KAAK,IAAI;QAC9BF,MAAM,CAACG,MAAM,CAAC,CAACD,KAAK,CAACpC,SAAS,EAAEoC,KAAK,CAACrC,QAAQ,CAAC,CAAC;MAClD,CAAC,CAAC;MAEFuC,UAAU,CAAC,MAAM;QACf,IAAI3F,GAAG,CAACkB,OAAO,EAAE;UACfc,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEsD,MAAM,CAAC;UAC7CvF,GAAG,CAACkB,OAAO,CAAC0E,SAAS,CAACL,MAAM,EAAE;YAAEM,OAAO,EAAE,EAAE;YAAEC,OAAO,EAAE;UAAG,CAAC,CAAC;QAC7D;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL9D,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,MAAM4D,UAA6B,GAAG,CACpC;MACE5C,EAAE,EAAE,GAAG;MACPC,QAAQ,EAAE,MAAM;MAChBC,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE,yBAAyB;MAChCE,WAAW,EAAE,sDAAsD;MACnEd,YAAY,EAAE,MAAM;MACpBiB,IAAI,EAAE,UAAU;MAChBC,SAAS,EAAE,sBAAsB;MACjCC,QAAQ,EAAE;QAAEmC,QAAQ,EAAE,CAAC;QAAEC,UAAU,EAAE;MAAE;IACzC,CAAC,EACD;MACE9C,EAAE,EAAE,GAAG;MACPC,QAAQ,EAAE,MAAM;MAChBC,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE,6BAA6B;MACpCE,WAAW,EAAE,0CAA0C;MACvDd,YAAY,EAAE,KAAK;MACnBiB,IAAI,EAAE,UAAU;MAChBC,SAAS,EAAE,sBAAsB;MACjCC,QAAQ,EAAE;QAAEqC,cAAc,EAAE;MAAe;IAC7C,CAAC,EACD;MACE/C,EAAE,EAAE,GAAG;MACPC,QAAQ,EAAE,MAAM;MAChBC,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE,2BAA2B;MAClCE,WAAW,EAAE,qDAAqD;MAClEd,YAAY,EAAE,QAAQ;MACtBiB,IAAI,EAAE,cAAc;MACpBC,SAAS,EAAE,sBAAsB;MACjCC,QAAQ,EAAE;QAAEsC,eAAe,EAAE;MAAG;IAClC,CAAC,CACF;IAED7F,SAAS,CAACyF,UAAU,CAAC;EACvB,CAAC;EAED,MAAMpE,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAAC3B,GAAG,CAACkB,OAAO,IAAI,CAACjB,QAAQ,EAAE;IAC/B+B,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;;IAE5C;IACA;EACF,CAAC;EACDjD,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,GAAG,CAACkB,OAAO,IAAI,CAACjB,QAAQ,IAAII,MAAM,CAAC8E,MAAM,KAAK,CAAC,EAAE;IAEtDnD,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/CD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE5B,MAAM,CAAC;IACzC2B,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEhC,QAAQ,CAAC;IAEpC,MAAMmG,cAAc,GAAG/F,MAAM,CAACgG,MAAM,CAACZ,KAAK,IAAI;MAC5C,MAAMa,kBAAkB,GAAG/F,OAAO,CAACE,aAAa,CAACwE,QAAQ,CAACQ,KAAK,CAAC/C,YAAY,CAAC;MAC7E,MAAM6D,WAAW,GAAGhG,OAAO,CAACG,WAAW,CAACuE,QAAQ,CAACQ,KAAK,CAAC9B,IAAI,CAAC;MAE5D,IAAI6C,gBAAgB,GAAG,IAAI;MAC3B,IAAIjG,OAAO,CAACI,UAAU,CAACC,KAAK,IAAIL,OAAO,CAACI,UAAU,CAACE,GAAG,EAAE;QACtD,MAAM4F,SAAS,GAAG,IAAIC,IAAI,CAACjB,KAAK,CAAC7B,SAAS,CAAC;QAC3C,MAAM+C,SAAS,GAAG,IAAID,IAAI,CAACnG,OAAO,CAACI,UAAU,CAACC,KAAK,CAAC;QACpD,MAAMgG,OAAO,GAAG,IAAIF,IAAI,CAACnG,OAAO,CAACI,UAAU,CAACE,GAAG,CAAC;QAChD2F,gBAAgB,GAAGC,SAAS,IAAIE,SAAS,IAAIF,SAAS,IAAIG,OAAO;MACnE;MAEA,OAAON,kBAAkB,IAAIC,WAAW,IAAIC,gBAAgB;IAC9D,CAAC,CAAC;IAEFxE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEmE,cAAc,CAAC;IAE/C,MAAMS,WAAW,GAAG;MAClBlD,IAAI,EAAE,mBAA4B;MAClCmD,QAAQ,EAAEV,cAAc,CAACpG,GAAG,CAACyF,KAAK,KAAK;QACrC9B,IAAI,EAAE,SAAkB;QACxBoD,UAAU,EAAE;UACV5D,EAAE,EAAEsC,KAAK,CAACtC,EAAE;UACZG,KAAK,EAAEmC,KAAK,CAACnC,KAAK;UAClBE,WAAW,EAAEiC,KAAK,CAACjC,WAAW;UAC9Bd,YAAY,EAAE+C,KAAK,CAAC/C,YAAY;UAChCiB,IAAI,EAAE8B,KAAK,CAAC9B,IAAI;UAChBC,SAAS,EAAE6B,KAAK,CAAC7B;QACnB,CAAC;QACDoD,QAAQ,EAAE;UACRrD,IAAI,EAAE,OAAgB;UACtBf,WAAW,EAAE,CAAC6C,KAAK,CAACpC,SAAS,EAAEoC,KAAK,CAACrC,QAAQ;QAC/C;MACF,CAAC,CAAC;IACJ,CAAC;IAEDpB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE4E,WAAW,CAAC;IAEzC,IAAI;MACF,MAAM9C,MAAM,GAAG/D,GAAG,CAACkB,OAAO,CAAC+F,SAAS,CAAC,qBAAqB,CAA2B;MACrF,IAAIlD,MAAM,EAAE;QACV/B,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjD8B,MAAM,CAACmD,OAAO,CAACL,WAAW,CAAC;MAC7B,CAAC,MAAM;QACL7E,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;QAC/D;QACAjC,GAAG,CAACkB,OAAO,CAACiG,SAAS,CAAC,qBAAqB,EAAE;UAC3CxD,IAAI,EAAE,SAAS;UACfyD,IAAI,EAAEP;QACR,CAAC,CAAC;;QAEF;QACA7G,GAAG,CAACkB,OAAO,CAACmG,QAAQ,CAAC;UACnBlE,EAAE,EAAE,sBAAsB;UAC1BQ,IAAI,EAAE,QAAQ;UACdI,MAAM,EAAE,qBAAqB;UAC7BuD,KAAK,EAAE;YACL,eAAe,EAAE,CACf,MAAM,EACN,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAC3C,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,QAAQ,CAAC,EAAE,EAAE,EAC7C,CAAC,CACF;YACD,cAAc,EAAE,CACd,MAAM,EACN,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,MAAM,CAAC,EAAE,SAAS,EAClD,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS,EACpD,SAAS,CACV;YACD,gBAAgB,EAAE,GAAG;YACrB,qBAAqB,EAAE,CAAC;YACxB,qBAAqB,EAAE;UACzB;QACF,CAAC,CAAC;;QAEF;QACAtH,GAAG,CAACkB,OAAO,CAACmG,QAAQ,CAAC;UACnBlE,EAAE,EAAE,qBAAqB;UACzBQ,IAAI,EAAE,QAAQ;UACdI,MAAM,EAAE,qBAAqB;UAC7BwD,MAAM,EAAE;YACN,YAAY,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;YAC9B,WAAW,EAAE,CAAC,oBAAoB,EAAE,uBAAuB,CAAC;YAC5D,aAAa,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;YACvB,aAAa,EAAE,KAAK;YACpB,WAAW,EAAE;UACf,CAAC;UACDD,KAAK,EAAE;YACL,YAAY,EAAE,SAAS;YACvB,iBAAiB,EAAE,SAAS;YAC5B,iBAAiB,EAAE;UACrB;QACF,CAAC,CAAC;;QAEF;QACAtH,GAAG,CAACkB,OAAO,CAACQ,EAAE,CAAC,OAAO,EAAE,sBAAsB,EAAG8F,CAAC,IAAK;UACrD,IAAIA,CAAC,CAACV,QAAQ,IAAIU,CAAC,CAACV,QAAQ,CAAC,CAAC,CAAC,EAAE;YAC/B,MAAMW,OAAO,GAAGD,CAAC,CAACV,QAAQ,CAAC,CAAC,CAAC;YAC7B,MAAMrB,KAAK,GAAGpF,MAAM,CAAC0E,IAAI,CAAC2C,CAAC;cAAA,IAAAC,mBAAA;cAAA,OAAID,CAAC,CAACvE,EAAE,OAAAwE,mBAAA,GAAKF,OAAO,CAACV,UAAU,cAAAY,mBAAA,uBAAlBA,mBAAA,CAAoBxE,EAAE;YAAA,EAAC;YAC/D,IAAIsC,KAAK,EAAE;cAAA,IAAAmC,eAAA;cACTxH,gBAAgB,CAACqF,KAAK,CAAC;;cAEvB;cACA,IAAItG,QAAQ,CAAC0I,KAAK,CAAC,CAAC,CACjBC,SAAS,CAAC,CAACrC,KAAK,CAACpC,SAAS,EAAEoC,KAAK,CAACrC,QAAQ,CAAC,CAAC,CAC5C2E,OAAO,CAAC;AACzB;AACA,mEAAmEtC,KAAK,CAACnC,KAAK;AAC9E,4DAA4DmC,KAAK,CAACjC,WAAW;AAC7E;AACA,2EACwBiC,KAAK,CAAC/C,YAAY,KAAK,MAAM,GAAG,yBAAyB,GACzD+C,KAAK,CAAC/C,YAAY,KAAK,QAAQ,GAAG,+BAA+B,GACjE,6BAA6B;AACrD,0BAC0B+C,KAAK,CAAC/C,YAAY,CAACsF,WAAW,CAAC,CAAC;AAC1D;AACA,4DAA4DvC,KAAK,CAAC9B,IAAI;AACtE;AACA,sBAAsB,CAAAiE,eAAA,GAAAnC,KAAK,CAAC5B,QAAQ,cAAA+D,eAAA,eAAdA,eAAA,CAAgB5D,QAAQ,GAAG,iDAAiDyB,KAAK,CAAC5B,QAAQ,CAACG,QAAQ,MAAM,GAAG,EAAE;AACpI;AACA,iBAAiB,CAAC,CACDiE,KAAK,CAACjI,GAAG,CAACkB,OAAQ,CAAC;YACxB;UACF;QACF,CAAC,CAAC;;QAEF;QACAlB,GAAG,CAACkB,OAAO,CAACQ,EAAE,CAAC,YAAY,EAAE,sBAAsB,EAAE,MAAM;UACzD,IAAI1B,GAAG,CAACkB,OAAO,EAAE;YACflB,GAAG,CAACkB,OAAO,CAACgH,SAAS,CAAC,CAAC,CAAC7G,KAAK,CAAC8G,MAAM,GAAG,SAAS;UAClD;QACF,CAAC,CAAC;QAEFnI,GAAG,CAACkB,OAAO,CAACQ,EAAE,CAAC,YAAY,EAAE,sBAAsB,EAAE,MAAM;UACzD,IAAI1B,GAAG,CAACkB,OAAO,EAAE;YACflB,GAAG,CAACkB,OAAO,CAACgH,SAAS,CAAC,CAAC,CAAC7G,KAAK,CAAC8G,MAAM,GAAG,EAAE;UAC3C;QACF,CAAC,CAAC;MACJ;;MAEA;MACA,IAAInI,GAAG,CAACkB,OAAO,EAAE;QACflB,GAAG,CAACkB,OAAO,CAACkH,cAAc,CAAC,CAAC;MAC9B;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdrG,OAAO,CAACqG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC,EAAE,CAAChI,MAAM,EAAEE,OAAO,EAAEN,QAAQ,CAAC,CAAC;EAE/B,MAAMqI,YAAY,GAAGA,CAACC,UAA2B,EAAEC,KAAa,KAAK;IACnEhI,UAAU,CAACiI,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP,CAACF,UAAU,GAAGG,KAAK,CAACC,OAAO,CAACF,IAAI,CAACF,UAAU,CAAC,CAAC,GACxCE,IAAI,CAACF,UAAU,CAAC,CAActD,QAAQ,CAACuD,KAAK,CAAC,GAC3CC,IAAI,CAACF,UAAU,CAAC,CAAclC,MAAM,CAACuC,IAAI,IAAIA,IAAI,KAAKJ,KAAK,CAAC,GAC7D,CAAC,GAAIC,IAAI,CAACF,UAAU,CAAc,EAAEC,KAAK,CAAC,GAC5CC,IAAI,CAACF,UAAU;IACrB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,OAAO,GAAGC,IAAI,CAACC,SAAS,CAAC3I,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/C,MAAM4I,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAACJ,OAAO,CAAC,EAAE;MAAEnF,IAAI,EAAE;IAAmB,CAAC,CAAC;IAClE,MAAMwF,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,QAAQ,CAAC;IACzC,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;IACfG,IAAI,CAACI,QAAQ,GAAG,4BAA4B;IAC5CJ,IAAI,CAACK,KAAK,CAAC,CAAC;IACZP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC;EAC1B,CAAC;EAED,MAAMU,mBAAmB,GAAIC,KAAa,IAAK;IAC7C,QAAQA,KAAK;MACX,KAAK,MAAM;QAAE,OAAO,uCAAuC;MAC3D,KAAK,QAAQ;QAAE,OAAO,gDAAgD;MACtE;QAAS,OAAO,6CAA6C;IAC/D;EACF,CAAC;EAED,oBACEpK,OAAA;IAAKqK,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE5BtK,OAAA;MAAKqK,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDtK,OAAA;QAAAsK,QAAA,gBACEtK,OAAA;UAAIqK,SAAS,EAAC,oDAAoD;UAAAC,QAAA,gBAChEtK,OAAA,CAACN,MAAM;YAAC2K,SAAS,EAAC;UAA2B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,+BAElD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL1K,OAAA;UAAGqK,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAC9BnK,YAAY,GACT,iCAAiCA,YAAY,CAACgE,QAAQ,CAACG,QAAQ,EAAE,GACjE;QAA8D;UAAAiG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEN1K,OAAA;QAAKqK,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC1CtK,OAAA;UACE2K,OAAO,EAAEA,CAAA,KAAMtJ,cAAc,CAAC,CAACD,WAAW,CAAE;UAC5CiJ,SAAS,EAAE,sEACTjJ,WAAW,GAAG,wBAAwB,GAAG,6CAA6C,EACrF;UAAAkJ,QAAA,gBAEHtK,OAAA,CAACL,MAAM;YAAC0K,SAAS,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9B1K,OAAA;YAAAsK,QAAA,EAAM;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eAET1K,OAAA;UACE2K,OAAO,EAAEA,CAAA,KAAM;YACbrI,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAC3C,IAAIpC,YAAY,EAAE;cAChBqC,gBAAgB,CAAC,CAAC;YACpB,CAAC,MAAM;cACLC,YAAY,CAAC,CAAC;YAChB;UACF,CAAE;UACF4H,SAAS,EAAC,iHAAiH;UAC3HzG,KAAK,EAAC,kBAAkB;UAAA0G,QAAA,gBAExBtK,OAAA,CAACH,MAAM;YAACwK,SAAS,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9B1K,OAAA;YAAAsK,QAAA,EAAM;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eAET1K,OAAA;UACE2K,OAAO,EAAEA,CAAA,KAAM;YACbrI,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;YACpC,MAAMqI,UAA6B,GAAG,CACpC;cACEnH,EAAE,EAAE,QAAQ;cACZC,QAAQ,EAAE,MAAM;cAChBC,SAAS,EAAE,MAAM;cACjBC,KAAK,EAAE,kBAAkB;cACzBE,WAAW,EAAE,oCAAoC;cACjDd,YAAY,EAAE,MAAM;cACpBiB,IAAI,EAAE,UAAU;cAChBC,SAAS,EAAE,IAAI8C,IAAI,CAAC,CAAC,CAAC6D,WAAW,CAAC;YACpC,CAAC,EACD;cACEpH,EAAE,EAAE,QAAQ;cACZC,QAAQ,EAAE,MAAM;cAChBC,SAAS,EAAE,MAAM;cACjBC,KAAK,EAAE,kBAAkB;cACzBE,WAAW,EAAE,oCAAoC;cACjDd,YAAY,EAAE,QAAQ;cACtBiB,IAAI,EAAE,UAAU;cAChBC,SAAS,EAAE,IAAI8C,IAAI,CAAC,CAAC,CAAC6D,WAAW,CAAC;YACpC,CAAC,CACF;YACDvI,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEqI,UAAU,CAAC;YAC/ChK,SAAS,CAACgK,UAAU,CAAC;UACvB,CAAE;UACFP,SAAS,EAAC,iHAAiH;UAC3HzG,KAAK,EAAC,iBAAiB;UAAA0G,QAAA,gBAEvBtK,OAAA,CAACN,MAAM;YAAC2K,SAAS,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9B1K,OAAA;YAAAsK,QAAA,EAAM;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eAET1K,OAAA;UACE2K,OAAO,EAAExB,aAAc;UACvBkB,SAAS,EAAC,+GAA+G;UAAAC,QAAA,gBAEzHtK,OAAA,CAACJ,QAAQ;YAACyK,SAAS,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChC1K,OAAA;YAAAsK,QAAA,EAAM;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLvK,YAAY,iBACXH,OAAA;MAAKqK,SAAS,EAAC,kDAAkD;MAAAC,QAAA,gBAC/DtK,OAAA;QAAIqK,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvE1K,OAAA;QAAKqK,SAAS,EAAC,+CAA+C;QAAAC,QAAA,gBAC5DtK,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAMqK,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAC;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACzE1K,OAAA;YAAMqK,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEnK,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAACO,WAAW,CAACuC;UAAM;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC7GvK,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAACO,WAAW,CAACuC,MAAM,GAAG,CAAC,iBACnEzF,OAAA;YAAIqK,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EACvCnK,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAACO,WAAW,CAAC5C,GAAG,CAAC,CAACgD,KAAK,EAAEwH,CAAC,kBACtE9K,OAAA;cAAAsK,QAAA,GAAahH,KAAK,CAACI,QAAQ,CAACM,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACV,KAAK,CAACK,SAAS,CAACK,OAAO,CAAC,CAAC,CAAC;YAAA,GAA3D8G,CAAC;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+D,CAC1E;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACL;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN1K,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAMqK,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChE1K,OAAA;YAAMqK,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEnK,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAACQ,MAAM,CAACsC;UAAM;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACxGvK,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAACQ,MAAM,CAACsC,MAAM,GAAG,CAAC,iBAC9DzF,OAAA;YAAKqK,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EACxCnK,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAACQ,MAAM,CAACwC,IAAI,CAAC,IAAI;UAAC;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN1K,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAMqK,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC9D1K,OAAA;YAAMqK,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAE3J,MAAM,CAAC8E;UAAM;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC1D/J,MAAM,CAAC8E,MAAM,GAAG,CAAC,iBAChBzF,OAAA;YAAIqK,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EACvC3J,MAAM,CAACL,GAAG,CAAC,CAACyF,KAAK,EAAE+E,CAAC,kBACnB9K,OAAA;cAAAsK,QAAA,GAAavE,KAAK,CAACnC,KAAK,EAAC,IAAE,EAACmC,KAAK,CAAC9B,IAAI,EAAC,GAAC;YAAA,GAA/B6G,CAAC;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAkC,CAC7C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACL;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAvK,YAAY,iBACXH,OAAA;MAAKqK,SAAS,EAAC,kDAAkD;MAAAC,QAAA,gBAC/DtK,OAAA;QAAIqK,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/E1K,OAAA;QAAKqK,SAAS,EAAC,+CAA+C;QAAAC,QAAA,gBAC5DtK,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAMqK,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnE1K,OAAA;YAAMqK,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEnK,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAACoI;UAAe;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxG,CAAC,eACN1K,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAMqK,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1D1K,OAAA;YAAMqK,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEnK,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAACQ,MAAM,CAACsC;UAAM;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtG,CAAC,eACN1K,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAMqK,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/D1K,OAAA;YAAMqK,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEnK,YAAY,CAACuC,QAAQ,CAACC,uBAAuB,CAACO,WAAW,CAACuC;UAAM;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3G,CAAC,eACN1K,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAMqK,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChE1K,OAAA;YAAMqK,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEnK,YAAY,CAACuC,QAAQ,CAACK,kBAAkB,CAACC;UAAY;YAAAuH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA,CAACvK,YAAY,iBACZH,OAAA;MAAKqK,SAAS,EAAC,sDAAsD;MAAAC,QAAA,gBACnEtK,OAAA;QAAKqK,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCtK,OAAA,CAACF,aAAa;UAACuK,SAAS,EAAC;QAA8B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1D1K,OAAA;UAAIqK,SAAS,EAAC,6BAA6B;UAAAC,QAAA,EAAC;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eACN1K,OAAA;QAAGqK,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAGpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,eAGD1K,OAAA;MAAKqK,SAAS,EAAC,uCAAuC;MAAAC,QAAA,gBACpDtK,OAAA;QAAKqK,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBACpDtK,OAAA;UAAKqK,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAE3J,MAAM,CAAC8E;QAAM;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvE1K,OAAA;UAAKqK,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACN1K,OAAA;QAAKqK,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBACpDtK,OAAA;UAAKqK,SAAS,EAAC,iCAAiC;UAAAC,QAAA,EAC7C3J,MAAM,CAACgG,MAAM,CAACqB,CAAC,IAAIA,CAAC,CAAChF,YAAY,KAAK,MAAM,CAAC,CAACyC;QAAM;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACN1K,OAAA;UAAKqK,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACN1K,OAAA;QAAKqK,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBACpDtK,OAAA;UAAKqK,SAAS,EAAC,oCAAoC;UAAAC,QAAA,EAChD3J,MAAM,CAACgG,MAAM,CAACqB,CAAC,IAAIA,CAAC,CAAChF,YAAY,KAAK,QAAQ,CAAC,CAACyC;QAAM;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACN1K,OAAA;UAAKqK,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACN1K,OAAA;QAAKqK,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBACpDtK,OAAA;UAAKqK,SAAS,EAAC,mCAAmC;UAAAC,QAAA,EAC/C3J,MAAM,CAACgG,MAAM,CAACqB,CAAC,IAAIA,CAAC,CAAChF,YAAY,KAAK,KAAK,CAAC,CAACyC;QAAM;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACN1K,OAAA;UAAKqK,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLtJ,WAAW,iBACVpB,OAAA;MAAKqK,SAAS,EAAC,uCAAuC;MAAAC,QAAA,gBACpDtK,OAAA;QAAIqK,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzE1K,OAAA;QAAKqK,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBAEpDtK,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAIqK,SAAS,EAAC,gCAAgC;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjE1K,OAAA;YAAKqK,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvB,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAChK,GAAG,CAAE8J,KAAK,iBACnCpK,OAAA;cAAmBqK,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAC9CtK,OAAA;gBACEiE,IAAI,EAAC,UAAU;gBACf+G,OAAO,EAAEnK,OAAO,CAACE,aAAa,CAACwE,QAAQ,CAAC6E,KAAK,CAAE;gBAC/Ca,QAAQ,EAAEA,CAAA,KAAMrC,YAAY,CAAC,eAAe,EAAEwB,KAAK,CAAE;gBACrDC,SAAS,EAAC;cAAgE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3E,CAAC,eACF1K,OAAA;gBAAMqK,SAAS,EAAE,yCAAyCF,mBAAmB,CAACC,KAAK,CAAC,EAAG;gBAAAE,QAAA,EACpFF,KAAK,CAAC9B,WAAW,CAAC;cAAC;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC;YAAA,GATGN,KAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUV,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN1K,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAIqK,SAAS,EAAC,gCAAgC;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/D1K,OAAA;YAAKqK,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvB,CAAC,UAAU,EAAE,cAAc,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,CAAC,CAAChK,GAAG,CAAE2D,IAAI,iBAC7EjE,OAAA;cAAkBqK,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAC7CtK,OAAA;gBACEiE,IAAI,EAAC,UAAU;gBACf+G,OAAO,EAAEnK,OAAO,CAACG,WAAW,CAACuE,QAAQ,CAACtB,IAAI,CAAE;gBAC5CgH,QAAQ,EAAEA,CAAA,KAAMrC,YAAY,CAAC,aAAa,EAAE3E,IAAI,CAAE;gBAClDoG,SAAS,EAAC;cAAgE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3E,CAAC,eACF1K,OAAA;gBAAMqK,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAErG;cAAI;gBAAAsG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GAPhCzG,IAAI;cAAAsG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQT,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN1K,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAIqK,SAAS,EAAC,gCAAgC;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9D1K,OAAA;YAAKqK,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBtK,OAAA;cACEiE,IAAI,EAAC,MAAM;cACX6E,KAAK,EAAEjI,OAAO,CAACI,UAAU,CAACC,KAAM;cAChC+J,QAAQ,EAAGnD,CAAC,IAAKhH,UAAU,CAACiI,IAAI,KAAK;gBACnC,GAAGA,IAAI;gBACP9H,UAAU,EAAE;kBAAE,GAAG8H,IAAI,CAAC9H,UAAU;kBAAEC,KAAK,EAAE4G,CAAC,CAACoD,MAAM,CAACpC;gBAAM;cAC1D,CAAC,CAAC,CAAE;cACJuB,SAAS,EAAC,qFAAqF;cAC/Fc,WAAW,EAAC;YAAY;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACF1K,OAAA;cACEiE,IAAI,EAAC,MAAM;cACX6E,KAAK,EAAEjI,OAAO,CAACI,UAAU,CAACE,GAAI;cAC9B8J,QAAQ,EAAGnD,CAAC,IAAKhH,UAAU,CAACiI,IAAI,KAAK;gBACnC,GAAGA,IAAI;gBACP9H,UAAU,EAAE;kBAAE,GAAG8H,IAAI,CAAC9H,UAAU;kBAAEE,GAAG,EAAE2G,CAAC,CAACoD,MAAM,CAACpC;gBAAM;cACxD,CAAC,CAAC,CAAE;cACJuB,SAAS,EAAC,qFAAqF;cAC/Fc,WAAW,EAAC;YAAU;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGD1K,OAAA;MAAKqK,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAChEtK,OAAA;QACEoL,GAAG,EAAE/K,YAAa;QAClBgK,SAAS,EAAC,aAAa;QACvB1I,KAAK,EAAE;UAAE0J,SAAS,EAAE;QAAQ;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,EAED,CAACnK,QAAQ,iBACRP,OAAA;QAAKqK,SAAS,EAAC,8DAA8D;QAAAC,QAAA,eAC3EtK,OAAA;UAAKqK,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BtK,OAAA,CAACN,MAAM;YAAC2K,SAAS,EAAC;UAAkD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvE1K,OAAA;YAAGqK,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGLjK,aAAa,iBACZT,OAAA;MAAKqK,SAAS,EAAC,uCAAuC;MAAAC,QAAA,gBACpDtK,OAAA;QAAIqK,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBACxEtK,OAAA,CAACF,aAAa;UAACuK,SAAS,EAAC;QAA4B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,0BAE1D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL1K,OAAA;QAAKqK,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBACpDtK,OAAA;UAAAsK,QAAA,gBACEtK,OAAA;YAAIqK,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAE7J,aAAa,CAACmD;UAAK;YAAA2G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpE1K,OAAA;YAAGqK,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAE7J,aAAa,CAACqD;UAAW;YAAAyG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjE1K,OAAA;YAAKqK,SAAS,EAAC,kCAAkC;YAAAC,QAAA,gBAC/CtK,OAAA;cAAMqK,SAAS,EAAE,yCAAyCF,mBAAmB,CAAC1J,aAAa,CAACuC,YAAY,CAAC,EAAG;cAAAsH,QAAA,EACzG7J,aAAa,CAACuC,YAAY,CAACsF,WAAW,CAAC;YAAC;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC,eACP1K,OAAA;cAAMqK,SAAS,EAAC,kCAAkC;cAAAC,QAAA,EAAE7J,aAAa,CAACwD;YAAI;cAAAsG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN1K,OAAA;UAAAsK,QAAA,eACEtK,OAAA;YAAKqK,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpCtK,OAAA;cAAAsK,QAAA,gBAAGtK,OAAA;gBAAAsK,QAAA,EAAQ;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjK,aAAa,CAACiD,QAAQ,CAACM,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACvD,aAAa,CAACkD,SAAS,CAACK,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAuG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9G1K,OAAA;cAAAsK,QAAA,gBAAGtK,OAAA;gBAAAsK,QAAA,EAAQ;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC,IAAI1D,IAAI,CAACvG,aAAa,CAACyD,SAAS,CAAC,CAACoH,cAAc,CAAC,CAAC;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACtFjK,aAAa,CAAC0D,QAAQ,iBACrBnE,OAAA;cAAKqK,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnBtK,OAAA;gBAAAsK,QAAA,EAAQ;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1B1K,OAAA;gBAAIqK,SAAS,EAAC,WAAW;gBAAAC,QAAA,EACtBnF,MAAM,CAACoG,OAAO,CAAC9K,aAAa,CAAC0D,QAAQ,CAAC,CAAC7D,GAAG,CAAC,CAAC,CAACgF,GAAG,EAAEwD,KAAK,CAAC,kBACvD9I,OAAA;kBAAcqK,SAAS,EAAC,SAAS;kBAAAC,QAAA,GAC9BhF,GAAG,EAAC,IAAE,EAACkG,MAAM,CAAC1C,KAAK,CAAC;gBAAA,GADdxD,GAAG;kBAAAiF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAER,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtK,EAAA,CA3yBIF,aAA2C;AAAAuL,EAAA,GAA3CvL,aAA2C;AA6yBjD,eAAeA,aAAa;AAAC,IAAAuL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}